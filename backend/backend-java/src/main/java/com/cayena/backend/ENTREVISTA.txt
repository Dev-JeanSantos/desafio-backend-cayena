

BRUNA - FCAMARA => C6 BANK


RESPONSABILIDADES E ATRIBUIÇÕES
• Solucionar problemas técnicos.
• Seguir políticas e processos definidos pelo C6.
• Codificar testes unitários, funcionais, performance, seguindo diretrizes de Qualidade.
• Resolver problemas em produção em incidentes que impactam os clientes.
• Instrumentar as aplicações para extração de informações de performance, logs de funcionamento e métricas.

REQUISITOS E QUALIFICAÇÕES
Hard Skill:
• Linguagem Kotlin;
• Plataforma de conteinerização Docker;
• Orquestração de containers Kubernetes;
• Plataformas Apigee e NodeJs (gerenciamento server-side).
( um provedor de software de gerenciamento de API e análise preditiva antes de sua fusão com o Google Cloud)

Soft Skill:
• Capacidade de comunicação clara e objetiva;
• Espírito de equipe e capacidade de resolução de conflitos;
• Habilidade de trabalhar em equipes ágeis e multidisciplinares;
• Criatividade e proatividade para imaginar diferentes cenários de uso das aplicações.

Seria legal se você tivesse:

• Experiência com a linguagem Java;
• Vivência com Framework Spring Boot;
• Experiência em Arquitetura de Microsserviços;
• Boas práticas de desenvolvimento de software – TDD, DDD e Clean Code;
• Boas Práticas em Frameworks ágeis: SCRUM e KANBAN;
• Instanciamento virtual de servidores AWS EC2;
• Vivência com Banco de Dados SQL e NoSQL;
• Experiência com Protocolo HTTP;
• Experiência Gerenciador de código GIT Flow.


Kotlin

Vantagens:
* Menos é mais: Menos Verbosidade (código fica mais legível e também agiliza o processo de programação);
* Quem nunca teve erro de ponto e vírgula;
*  Interoperável com Java: Kotlin permite a utilização das bibliotecas e frameworks Java. Assim, todo conhecimento acumulado com o desenvolvimento em Java não é desperdiçado.
*  Null safety: eliminação NullPointerException.

Desvantagens:
* Flutuação na velocidade de compilação;
* Falta de fonte de conhecimento
* Compartilhamento: a comunidade de suporte ainda é pequena, em comparação com Java, há poucos tutoriais e ajudas disponíveis nessa linguagem.

1 - Conhecimento de Spring Cloud (Security, Data, Web)
    FERRAMENTAS SPRINGBOOT
        - starter-web
        - jpa
        - validation
        - test
        - security
        - Opein Feign

    LOMBOK
        - menos verbosidade e trabalho
        - @Builder: Facilita construção de objetos
        - @Data: (toString, Getter e Setter, EqualeHasCode)
        - NoArgsContruct: Não aceita contrutores
        - AllArgsContruct: construtores com argumento

2 - AGIL
    - Pair programming
    - Code Review
    - Cerimonias: Daily, Retro, Review, Refinamentos

3 - Conhecimento de Java 8 ou superior:

    PILARES OO
        - Abstração.
        - Encapsulamento.
        - Herança.
        - Polimorfismo.

    S.O.L.I.D: Os 5 princípios da POO
        S — Single Responsiblity Principle (Princípio da responsabilidade única)
        O — Open-Closed Principle (Princípio Aberto-Fechado)
        L — Liskov Substitution Principle (Princípio da substituição de Liskov)
        I — Interface Segregation Principle (Princípio da Segregação da Interface)
        D — Dependency Inversion Principle (Princípio da inversão da dependência)

    O que um clean code deve ser?
        * Eficiente
        * Elegante
        * Atenção aos detalhes:
        * Atenção aos comentários:

    MVC é uma sigla em inglês para:
        M – model (modelo) -> manipulação dos dados;
        V – view (visualização) -> interação do usuário;
        C – controller (controlador).

    EXCEPTIONS:
        RestControllerAdvice - listener (ouvindo a aplicação)
        - NotFound
        - NotValid
        - BadRequest

4 - Padrões de desenvolvimento de APIs Rest:

    MONOLITO X MICROSSERVICES
        - Governança,
        - Escalabilidade,
        - Manutenção de Código,
        - Complexidade,
        - Integrações,
        - Custo

    VERBOS HTTP
        - POST/GET/DELETE/PUT OU PATCH

    HTTP STATUS
    - Respostas de sucesso:
        200 OK
        201 Created - POST
        202 Accepted
        204 No Content - DELETE

    - respostas de erro:
        400 Bad Request
        401 Unauthorized
        403 Forbidden
        404 Not Found
        406 Not Acceptable
        422 Unprocessable Entity

    - respostas de erro do Servidor
        500 Internal Server Error
        501 Not Implemented
        502 Bad Gateway

4 - Bancos de dados relacionais (MySql) e não relacionais (DynamoDb):
    Migrations
        - É o versionamento do schema de sua aplicação;
        - Controle que você crie, altere ou exclua tabelas, colunas, índices e outros elementos do banco de dados de forma consistente e controlada

5 - Ambiente de Nuvens AWS e containers (Docker):

    - SQS,
    - SNS,
    - STEP FUNCTIONS (SERVELESS),
    - LAMBDAS EM PYTHON,
    - ATHENA
    - RDS AWS
    - DYNAMODB
    - REDIS
    - JIB - ferramenta do google para containerizar seu projeto maven

6 - Ferramentas de análise de código

    Obsevability:
        - Paineis e Logs Grafana, Grafana Loki
        - Prometheus
        - actuator
        - Cloud Watch

    DevOps Spec:
        - CloudFormation,
        - comandos Linux,
        - Scripts de Continuous Deploy e Continuous Integration,
        - SonarQube E Fortify

7- Versionamento de Código:
    - GitHUb e GitLab
    - hotfix:
        É parecido com um patch mas corrige de forma imediata e sem precisar desligar ou interromper o sistema
    - Coldfix: Iniciar o serviço
    - bugfix:
        É um tipo de falha que geralmente ocorre durante a criação ou desenvolvimento do programa

8 - TESTES
    - UNITARIOS: JUNIT E MOCKITO
    - INTEGRADOS: LOCALSTASK OU CONTAINERS

9 - PROJETO
    spring.mvc.pathmatch.matching-strategy:
        é usado para identificar caminho de classe, sistema de arquivos


TIME DE CRM - COMUNICAÇÃO COM CLIENTES (MELHOR OFERTAS DO PRODUTO)
TIME SETUP - ONBOARD DA APLICAÇÃO (FRONT(ANDROID, IOS), UI/UX, ACESSIBILIDADE, QA, BACK)




































